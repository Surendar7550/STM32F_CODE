
INTERRUPT_BARMETAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000025c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000420  08000428  00001428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000420  08000420  00001428  2**0
                  CONTENTS
  4 .ARM          00000000  08000420  08000420  00001428  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000420  08000428  00001428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000420  08000420  00001420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000424  08000424  00001424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000428  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000428  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001428  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000112a  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000039c  00000000  00000000  00002582  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00002920  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000006c  00000000  00000000  000029c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001fa33  00000000  00000000  00002a34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000011d0  00000000  00000000  00022467  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000c441e  00000000  00000000  00023637  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000e7a55  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000140  00000000  00000000  000e7a98  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006e  00000000  00000000  000e7bd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000408 	.word	0x08000408

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000408 	.word	0x08000408

08000204 <main>:
#define PR_13       (1U << 13) //PENDING REGISTER

static void in_callback(void);

int main()
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |=GPIOAEN;
 8000208:	4b0a      	ldr	r3, [pc, #40]	@ (8000234 <main+0x30>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800020c:	4a09      	ldr	r2, [pc, #36]	@ (8000234 <main+0x30>)
 800020e:	f043 0301 	orr.w	r3, r3, #1
 8000212:	6313      	str	r3, [r2, #48]	@ 0x30

	GPIOA->MODER &=~(1U << 11);
 8000214:	4b08      	ldr	r3, [pc, #32]	@ (8000238 <main+0x34>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a07      	ldr	r2, [pc, #28]	@ (8000238 <main+0x34>)
 800021a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800021e:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=(1U << 10);
 8000220:	4b05      	ldr	r3, [pc, #20]	@ (8000238 <main+0x34>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a04      	ldr	r2, [pc, #16]	@ (8000238 <main+0x34>)
 8000226:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800022a:	6013      	str	r3, [r2, #0]

	pc13_int_init();
 800022c:	f000 f884 	bl	8000338 <pc13_int_init>
	while(1)
 8000230:	bf00      	nop
 8000232:	e7fd      	b.n	8000230 <main+0x2c>
 8000234:	40023800 	.word	0x40023800
 8000238:	40020000 	.word	0x40020000

0800023c <in_callback>:
	}

}

static void in_callback(void)
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
	GPIOA->ODR ^= LED_PIN_5;
 8000240:	4b05      	ldr	r3, [pc, #20]	@ (8000258 <in_callback+0x1c>)
 8000242:	695b      	ldr	r3, [r3, #20]
 8000244:	4a04      	ldr	r2, [pc, #16]	@ (8000258 <in_callback+0x1c>)
 8000246:	f083 0320 	eor.w	r3, r3, #32
 800024a:	6153      	str	r3, [r2, #20]
}
 800024c:	bf00      	nop
 800024e:	46bd      	mov	sp, r7
 8000250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop
 8000258:	40020000 	.word	0x40020000

0800025c <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0
	if((EXTI->PR & PR_13)!=0)
 8000260:	4b07      	ldr	r3, [pc, #28]	@ (8000280 <EXTI15_10_IRQHandler+0x24>)
 8000262:	695b      	ldr	r3, [r3, #20]
 8000264:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8000268:	2b00      	cmp	r3, #0
 800026a:	d007      	beq.n	800027c <EXTI15_10_IRQHandler+0x20>
	{
		EXTI->PR |=PR_13;  //CLEAR EVERY TIME
 800026c:	4b04      	ldr	r3, [pc, #16]	@ (8000280 <EXTI15_10_IRQHandler+0x24>)
 800026e:	695b      	ldr	r3, [r3, #20]
 8000270:	4a03      	ldr	r2, [pc, #12]	@ (8000280 <EXTI15_10_IRQHandler+0x24>)
 8000272:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000276:	6153      	str	r3, [r2, #20]
		in_callback();
 8000278:	f7ff ffe0 	bl	800023c <in_callback>
	}
}
 800027c:	bf00      	nop
 800027e:	bd80      	pop	{r7, pc}
 8000280:	40013c00 	.word	0x40013c00

08000284 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000284:	b480      	push	{r7}
 8000286:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000288:	4b06      	ldr	r3, [pc, #24]	@ (80002a4 <SystemInit+0x20>)
 800028a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800028e:	4a05      	ldr	r2, [pc, #20]	@ (80002a4 <SystemInit+0x20>)
 8000290:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000294:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000298:	bf00      	nop
 800029a:	46bd      	mov	sp, r7
 800029c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a0:	4770      	bx	lr
 80002a2:	bf00      	nop
 80002a4:	e000ed00 	.word	0xe000ed00

080002a8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80002a8:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80002e0 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 80002ac:	f7ff ffea 	bl	8000284 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80002b0:	480c      	ldr	r0, [pc, #48]	@ (80002e4 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 80002b2:	490d      	ldr	r1, [pc, #52]	@ (80002e8 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80002b4:	4a0d      	ldr	r2, [pc, #52]	@ (80002ec <LoopFillZerobss+0x1a>)
  movs r3, #0
 80002b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b8:	e002      	b.n	80002c0 <LoopCopyDataInit>

080002ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002be:	3304      	adds	r3, #4

080002c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c4:	d3f9      	bcc.n	80002ba <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002c6:	4a0a      	ldr	r2, [pc, #40]	@ (80002f0 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80002c8:	4c0a      	ldr	r4, [pc, #40]	@ (80002f4 <LoopFillZerobss+0x22>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002cc:	e001      	b.n	80002d2 <LoopFillZerobss>

080002ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d0:	3204      	adds	r2, #4

080002d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d4:	d3fb      	bcc.n	80002ce <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 80002d6:	f000 f873 	bl	80003c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80002da:	f7ff ff93 	bl	8000204 <main>
  bx  lr    
 80002de:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80002e0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ec:	08000428 	.word	0x08000428
  ldr r2, =_sbss
 80002f0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f4:	2000001c 	.word	0x2000001c

080002f8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80002f8:	e7fe      	b.n	80002f8 <ADC_IRQHandler>
	...

080002fc <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	4603      	mov	r3, r0
 8000304:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000306:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800030a:	2b00      	cmp	r3, #0
 800030c:	db0b      	blt.n	8000326 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800030e:	79fb      	ldrb	r3, [r7, #7]
 8000310:	f003 021f 	and.w	r2, r3, #31
 8000314:	4907      	ldr	r1, [pc, #28]	@ (8000334 <__NVIC_EnableIRQ+0x38>)
 8000316:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800031a:	095b      	lsrs	r3, r3, #5
 800031c:	2001      	movs	r0, #1
 800031e:	fa00 f202 	lsl.w	r2, r0, r2
 8000322:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000326:	bf00      	nop
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	e000e100 	.word	0xe000e100

08000338 <pc13_int_init>:
#define GPIOCEN			(1U << 2)
#define SYSCFGEN		(1U << 14) //RCC -> SYS CONFIG ENABLE


void pc13_int_init(void)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800033c:	b672      	cpsid	i
}
 800033e:	bf00      	nop
	__disable_irq(); //disable global interrupt

	RCC->AHB1ENR |=GPIOCEN;
 8000340:	4b1b      	ldr	r3, [pc, #108]	@ (80003b0 <pc13_int_init+0x78>)
 8000342:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000344:	4a1a      	ldr	r2, [pc, #104]	@ (80003b0 <pc13_int_init+0x78>)
 8000346:	f043 0304 	orr.w	r3, r3, #4
 800034a:	6313      	str	r3, [r2, #48]	@ 0x30

	GPIOC->MODER &=~(1U << 26);
 800034c:	4b19      	ldr	r3, [pc, #100]	@ (80003b4 <pc13_int_init+0x7c>)
 800034e:	681b      	ldr	r3, [r3, #0]
 8000350:	4a18      	ldr	r2, [pc, #96]	@ (80003b4 <pc13_int_init+0x7c>)
 8000352:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8000356:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U << 27);
 8000358:	4b16      	ldr	r3, [pc, #88]	@ (80003b4 <pc13_int_init+0x7c>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	4a15      	ldr	r2, [pc, #84]	@ (80003b4 <pc13_int_init+0x7c>)
 800035e:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 8000362:	6013      	str	r3, [r2, #0]


	RCC->APB1ENR |=SYSCFGEN;
 8000364:	4b12      	ldr	r3, [pc, #72]	@ (80003b0 <pc13_int_init+0x78>)
 8000366:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000368:	4a11      	ldr	r2, [pc, #68]	@ (80003b0 <pc13_int_init+0x78>)
 800036a:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800036e:	6413      	str	r3, [r2, #64]	@ 0x40

	//SYSCFG->EXTICR[3] |=(1U << 5); //EXTICR4 IS 3

	SYSCFG->EXTICR[3] &= ~(0xF << 4);
 8000370:	4b11      	ldr	r3, [pc, #68]	@ (80003b8 <pc13_int_init+0x80>)
 8000372:	695b      	ldr	r3, [r3, #20]
 8000374:	4a10      	ldr	r2, [pc, #64]	@ (80003b8 <pc13_int_init+0x80>)
 8000376:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800037a:	6153      	str	r3, [r2, #20]
	SYSCFG->EXTICR[3] |= (0x2 << 4);
 800037c:	4b0e      	ldr	r3, [pc, #56]	@ (80003b8 <pc13_int_init+0x80>)
 800037e:	695b      	ldr	r3, [r3, #20]
 8000380:	4a0d      	ldr	r2, [pc, #52]	@ (80003b8 <pc13_int_init+0x80>)
 8000382:	f043 0320 	orr.w	r3, r3, #32
 8000386:	6153      	str	r3, [r2, #20]

	EXTI->IMR |=(1U << 13); //INTERRUPT MASK REGISTER
 8000388:	4b0c      	ldr	r3, [pc, #48]	@ (80003bc <pc13_int_init+0x84>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	4a0b      	ldr	r2, [pc, #44]	@ (80003bc <pc13_int_init+0x84>)
 800038e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000392:	6013      	str	r3, [r2, #0]

	EXTI->RTSR |=(1U << 13); //RISHING EDGE DEACTION
 8000394:	4b09      	ldr	r3, [pc, #36]	@ (80003bc <pc13_int_init+0x84>)
 8000396:	689b      	ldr	r3, [r3, #8]
 8000398:	4a08      	ldr	r2, [pc, #32]	@ (80003bc <pc13_int_init+0x84>)
 800039a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800039e:	6093      	str	r3, [r2, #8]

	//EXTI->FTSR |=(1U << 13); //FALING EDGE DEACTION

	NVIC_EnableIRQ(EXTI15_10_IRQn);
 80003a0:	2028      	movs	r0, #40	@ 0x28
 80003a2:	f7ff ffab 	bl	80002fc <__NVIC_EnableIRQ>
  __ASM volatile ("cpsie i" : : : "memory");
 80003a6:	b662      	cpsie	i
}
 80003a8:	bf00      	nop

	__enable_irq();
}
 80003aa:	bf00      	nop
 80003ac:	bd80      	pop	{r7, pc}
 80003ae:	bf00      	nop
 80003b0:	40023800 	.word	0x40023800
 80003b4:	40020800 	.word	0x40020800
 80003b8:	40013800 	.word	0x40013800
 80003bc:	40013c00 	.word	0x40013c00

080003c0 <__libc_init_array>:
 80003c0:	b570      	push	{r4, r5, r6, lr}
 80003c2:	4d0d      	ldr	r5, [pc, #52]	@ (80003f8 <__libc_init_array+0x38>)
 80003c4:	4c0d      	ldr	r4, [pc, #52]	@ (80003fc <__libc_init_array+0x3c>)
 80003c6:	1b64      	subs	r4, r4, r5
 80003c8:	10a4      	asrs	r4, r4, #2
 80003ca:	2600      	movs	r6, #0
 80003cc:	42a6      	cmp	r6, r4
 80003ce:	d109      	bne.n	80003e4 <__libc_init_array+0x24>
 80003d0:	4d0b      	ldr	r5, [pc, #44]	@ (8000400 <__libc_init_array+0x40>)
 80003d2:	4c0c      	ldr	r4, [pc, #48]	@ (8000404 <__libc_init_array+0x44>)
 80003d4:	f000 f818 	bl	8000408 <_init>
 80003d8:	1b64      	subs	r4, r4, r5
 80003da:	10a4      	asrs	r4, r4, #2
 80003dc:	2600      	movs	r6, #0
 80003de:	42a6      	cmp	r6, r4
 80003e0:	d105      	bne.n	80003ee <__libc_init_array+0x2e>
 80003e2:	bd70      	pop	{r4, r5, r6, pc}
 80003e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003e8:	4798      	blx	r3
 80003ea:	3601      	adds	r6, #1
 80003ec:	e7ee      	b.n	80003cc <__libc_init_array+0xc>
 80003ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80003f2:	4798      	blx	r3
 80003f4:	3601      	adds	r6, #1
 80003f6:	e7f2      	b.n	80003de <__libc_init_array+0x1e>
 80003f8:	08000420 	.word	0x08000420
 80003fc:	08000420 	.word	0x08000420
 8000400:	08000420 	.word	0x08000420
 8000404:	08000424 	.word	0x08000424

08000408 <_init>:
 8000408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800040a:	bf00      	nop
 800040c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800040e:	bc08      	pop	{r3}
 8000410:	469e      	mov	lr, r3
 8000412:	4770      	bx	lr

08000414 <_fini>:
 8000414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000416:	bf00      	nop
 8000418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800041a:	bc08      	pop	{r3}
 800041c:	469e      	mov	lr, r3
 800041e:	4770      	bx	lr
